// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
  @@map("users")
}

model Room {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  capacity    Int
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  bookings    Booking[]
  @@map("rooms")
}

model Booking {
  id        Int           @id @default(autoincrement())
  startTime DateTime
  endTime   DateTime
  status    BookingStatus @default(SUBMIT)
  notes     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  userId    Int
  roomId    Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  @@map("bookings")
}


enum Role {
  ADMIN
  USER
}

enum BookingStatus {
  SUBMIT
  APPROVED
  REJECTED
}
